"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import local_settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = local_settings.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # включает и отключает режим отладкипроекта.
             # Если оно равно True, Django будет отображать подробные стра-
             # ницы с ошибками при выбрасывании исключений в приложении. Когда
             # мы будем разворачивать приложение на боевом сервере, нужно устано-
             # вить эту настройку в False. Никогда не публикуйте проект с включенным
             # режимом отладки, т. к. пользователям станут доступны секретные дан-
             # ные конфигурации приложения

ALLOWED_HOSTS = [] # не используется при включенной отладке и запуске тестов;
                   # как только мы развернем приложение и установим флаг
                   # в False, необходимо добавить домен сайта в эту настройку, 
                   # для того чтобы Django мог с ним работать

SITE_ID = 1 # добавлен идентификатор сайта для карты сайта

# Application definition

INSTALLED_APPS = [  # список активных приложений на сайте
    # Мои приложения
    'blog.apps.BlogConfig',

    # Сторонние приложения
    'taggit', # приложение, которое добавляет модель Tag и менеджер для тегирования любого объекта

    # Карта сайта
    # Подсистема карты сайта Django реализована позволяет настроить связь объектов приложения 
    # и конкретных сайтов, которые запускаются вместе с проектом. 
    # Это может быть полезным при запуске нескольких Django-сайтов в одном проекте. 
    # Для добавления подсистемы карты сайта активируются два приложения:
    'django.contrib.sites', # При синхронизации приложения sites с базой данных был создан объект по умолчанию с адресом example.com
    'django.contrib.sitemaps',

    # База данных PostgreSQL
    'django.contrib.postgres',

    # Приложения по умолчанию
    'django.contrib.admin',         # сайт администрирования
    'django.contrib.auth',          # подсистема аутентификации
    'django.contrib.contenttypes',  # подсистема для работы с типами объектов системы
    'django.contrib.sessions',      # подсистема сессий
    'django.contrib.messages',      # подсистема сообщений
    'django.contrib.staticfiles',   # подсистема для управления статическим содержимым сайта
]

MIDDLEWARE = [ # список подключенных промежуточных слоев
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls' # указывает на Python-модуль, который содержит корневые
                             # шаблоны URL’ов приложения

TEMPLATES = [ # словарь, содержащий настройки для всех баз данных проекта. 
              # всегда должна быть указана хотя бы одна база данных. 
              # По умолчанию подключена СУБД SQLite3
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = local_settings.DATABASES


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru' # определяет код языка по умолчанию для Django-сайта;
                        # заменили 'en-us' на 'ru'

TIME_ZONE = 'UTC' # указывает Django на необходимость поддержки временных зон
                  # В Django включена возможность использовать объекты дат, 
                  # учитывающие временные зоны. Эта настройка устанавливается в True, 
                  # когда мы создаем проект с помощью команды startproject.

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# email settings
EMAIL_HOST = local_settings.EMAIL_HOST
EMAIL_PORT = local_settings.EMAIL_PORT
EMAIL_HOST_USER = local_settings.EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = local_settings.EMAIL_HOST_PASSWORD
EMAIL_USE_TLS = local_settings.EMAIL_USE_TLS
